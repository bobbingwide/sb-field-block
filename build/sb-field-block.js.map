{"version":3,"file":"sb-field-block.js","mappings":"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;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC7BA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;;;;UEnDA;UACA;UACA;UACA;UACA","sources":["webpack://sb-field-block/../../../../wordpress/wp-content/plugins/sb-field-block/src/sb-field-block/display_meta.js","webpack://sb-field-block/../../../../wordpress/wp-content/plugins/sb-field-block/src/sb-field-block/edit.js","webpack://sb-field-block/../../../../wordpress/wp-content/plugins/sb-field-block/src/sb-field-block/field.js","webpack://sb-field-block/../../../../wordpress/wp-content/plugins/sb-field-block/src/sb-field-block/index.js","webpack://sb-field-block/../../../../wordpress/wp-content/plugins/sb-field-block/src/sb-field-block/post_type.js","webpack://sb-field-block/../../../../wordpress/wp-content/plugins/sb-field-block/src/sb-field-block/save.js","webpack://sb-field-block/../../../../wordpress/wp-content/plugins/sb-field-block/src/sb-field-block/store.js","webpack://sb-field-block/../../../../wordpress/wp-content/plugins/sb-field-block/src/sb-field-block/editor.scss?9b74","webpack://sb-field-block/../../../../wordpress/wp-content/plugins/sb-field-block/src/sb-field-block/style.scss?27e4","webpack://sb-field-block/external window \"ReactJSXRuntime\"","webpack://sb-field-block/external window [\"wp\",\"apiFetch\"]","webpack://sb-field-block/external window [\"wp\",\"blockEditor\"]","webpack://sb-field-block/external window [\"wp\",\"blocks\"]","webpack://sb-field-block/external window [\"wp\",\"components\"]","webpack://sb-field-block/external window [\"wp\",\"coreData\"]","webpack://sb-field-block/external window [\"wp\",\"data\"]","webpack://sb-field-block/external window [\"wp\",\"element\"]","webpack://sb-field-block/external window [\"wp\",\"i18n\"]","webpack://sb-field-block/external window [\"wp\",\"serverSideRender\"]","webpack://sb-field-block/webpack/bootstrap","webpack://sb-field-block/webpack/runtime/chunk loaded","webpack://sb-field-block/webpack/runtime/compat get default export","webpack://sb-field-block/webpack/runtime/define property getters","webpack://sb-field-block/webpack/runtime/hasOwnProperty shorthand","webpack://sb-field-block/webpack/runtime/make namespace object","webpack://sb-field-block/webpack/runtime/jsonp chunk loading","webpack://sb-field-block/webpack/before-startup","webpack://sb-field-block/webpack/startup","webpack://sb-field-block/webpack/after-startup"],"sourcesContent":["import {useSelect} from \"@wordpress/data\";\nimport ServerSideRender from '@wordpress/server-side-render';\n\nfunction getFieldDescription( postType, fieldName ) {\n\tvar field = getField( postType, fieldName);\n\tvar description = field ? field['#title'] : fieldName;\n\treturn description;\n}\n\nfunction getFieldType( postType, fieldName ) {\n\tvar field = getField( postType, fieldName);\n\tvar fieldType = field ? field['#field_type'] : undefined;\n\treturn fieldType;\n}\n\nfunction getPostFields( type ) {\n\tconst content = useSelect( ( select ) => {\n\t\treturn select( 'oiksb/fields' ).getFields();\n\t}, [] );\n\tconsole.log( \"getPostFields\");\n\tconsole.log( content );\n\tvar postFields = content.find( ({ postType }) => postType === type );\n\tconsole.log( postFields );\n\tconsole.log( \"GPF after\");\n\treturn postFields;\n}\n\nfunction getField( postType, fieldName ) {\n\tvar postFields = getPostFields( postType );\n\tif ( !postFields ) {\n\t\treturn null;\n\t}\n\tvar field = postFields.fields.find( ({ name }) => name === fieldName );\n\tconsole.log( field );\n\treturn field;\n\n}\n\nfunction needsRendering( fieldType ) {\n\tconsole.log( fieldType );\n var fieldTypeNeedsRendering = {\n \t'text': false,\n\t 'number': false\n };\n var fieldNeedsRendering = fieldTypeNeedsRendering.hasOwnProperty( fieldType ) ? fieldTypeNeedsRendering.fieldType : true;\n\n\n\treturn fieldNeedsRendering;\n}\n\nexport const DisplayMetaControl = ( props ) => {\n\tvar postType = props.postType;\n\tvar fieldName = props.fieldName;\n\tvar fieldValue = props.fieldValue;\n\tvar description = getFieldDescription( postType, fieldName );\n\tvar fieldType = getFieldType( postType, fieldName );\n\tvar separator = \": \";\n\n\tif ( fieldValue === 'Please set Field name' || needsRendering( fieldType ) ) {\n\t\t// Use the postID passed in context to allow for use of the block in query loops.\n\t\t// Note: We don't need the postType field, but it might come in handy for debugging.\n\t\t// or for deciding if the field needs to be server side rendered.\n\t\tlet urlQueryArgs = { \"post_id\": props.context.postId };\n\t\treturn(\n\t\t<ServerSideRender block=\"oiksb/sb-field-block\" attributes={props.attributes} urlQueryArgs={ urlQueryArgs }/>\n\t\t);\n\t}\n\telse {\n\t\tif ( props.attributes.showLabel ) {\n\t\t\treturn(\n\t\t\t\t<div className={\"bw_metadata \" + fieldName}>\n\t\t\t\t\t<span className={\"label \" + fieldName}>\n\t\t\t\t\t\t{description}\n\t\t\t\t\t</span>\n\t\t\t\t\t<span className=\"sep\">{separator}\n\t\t\t\t\t</span>\n\t\t\t\t\t<span className=\"value\">{fieldValue}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<div className={\"bw_metadata \" + fieldName}>\n\t\t\t\t\t<span className=\"value\">{fieldValue}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n}\n","/**\n * Retrieves the translation of text.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-i18n/\n */\nimport { __ } from '@wordpress/i18n';\n\n/**\n * React hook that is used to mark the block wrapper element.\n * It provides all the necessary props like the class name.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-block-editor/#useBlockProps\n */\nimport { useBlockProps, InspectorControls } from '@wordpress/block-editor';\nimport { TextControl, PanelBody, PanelRow, ToggleControl } from '@wordpress/components';\nimport { useSelect } from '@wordpress/data';\nimport { useEntityProp } from '@wordpress/core-data';\n//import { apiFetch } from '@wordpress/data-controls';\nimport { Fragment } from '@wordpress/element';\n\n///import { Fields } from './fields';\nimport { FieldSelect } from './field';\nimport { PostTypeSelect } from './post_type';\nimport { Store } from './store';\nimport { DisplayMetaControl} from './display_meta';\n\n/**\n * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.\n * Those files can contain any CSS code that gets applied to the editor.\n *\n * @see https://www.npmjs.com/package/@wordpress/scripts#using-css\n */\nimport './editor.scss';\n\n/**\n * The edit function describes the structure of your block in the context of the\n * editor. This represents what the editor will render when the block is used.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#edit\n *\n * @return {WPElement} Element to render.\n */\nexport default function Edit( { setAttributes, attributes, context } ) {\n\tconst blockProps = useBlockProps();\n\n\tvar postType = context.postType;\n\t/*\n\tpostType = useSelect(\n\t\t(select) => select('core/editor').getCurrentPostType(),\n\t\t[]\n\t);\n\t*/\n\n\tif ( attributes.postType === undefined ) {\n\t\t//postType = attributes.postType;\n\t\tonChangePostType( context.postType );\n\t} else {\n\t  // We've already found a value using select.\n\t}\n\n\t// See https://developer.wordpress.org/block-editor/reference-guides/packages/packages-core-data/#useentityprop\n\t// This retrieves the post metadata for the current post.\n\t// The post type needs to support `custom-fields`\n\tvar [meta, setMeta] = useEntityProp(\n\t\t'postType',\n\t\tcontext.postType,\n\t\t'meta'\n\t);\n\tconsole.log( \"Meta before\");\n\tconsole.log(meta);\n\tconsole.log( \"MA\");\n\tconst onChangeFieldName = (value) => {\n\t\t//attributes = getAttributes( value );\n\t\tsetAttributes({fieldName: value});\n\t}\n\n\t//if (\"\" != attributes.fieldName) {\n\t\tconst metaFieldValue = ( meta && \"\" != attributes.fieldName) ? meta[attributes.fieldName] : 'Please set Field name';\n\t//\n\tfunction updateMetaValue( newValue ) {\n\t\tsetMeta( { ...meta, [attributes.fieldName]: newValue } );\n\t}\n\n\tfunction onChangePostType( newValue ) {\n\t\tsetAttributes({postType: newValue});\n\t\tsetAttributes( {fieldName: undefined });\n\t}\n\n\tconst onChangeShowLabel = (value) => {\n\t\tsetAttributes( { showLabel: !attributes.showLabel });\n\t}\n\n\treturn (\n\t\t<Fragment>\n\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelBody>\n\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t<PostTypeSelect value={attributes.postType} onChange={onChangePostType} />\n\t\t\t\t\t</PanelRow>\n\t\t\t\t</PanelBody>\n\t\t\t\t<PanelBody>\n\t\t\t\t\t<PanelRow>\n\t\t\t\t\t<FieldSelect value={attributes.fieldName} onChange={onChangeFieldName} postType={attributes.postType} />\n\t\t\t\t\t</PanelRow>\n\t\t\t\t</PanelBody>\n\t\t\t\t<PanelBody>\n\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\tlabel={ __( 'Show label', 'sb-field-block' ) }\n\t\t\t\t\t\t\tchecked={ !! attributes.showLabel }\n\t\t\t\t\t\t\tonChange={ onChangeShowLabel }\n\n\t\t\t\t\t\t/>\n\t\t\t\t\t</PanelRow>\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\t\t\t<div { ...blockProps }>\n\t\t\t\t<DisplayMetaControl postType={attributes.postType} fieldName={attributes.fieldName} fieldValue={metaFieldValue} attributes={attributes} context={context}/>\n\n\t\t\t</div>\n\t\t</Fragment>\n\n\t\t);\n\n\n}\n","/**\n * Implements the Field selection list\n *\n * See fields.js for the first version that used an old method\n *\n * @copyright (C) Copyright Bobbing Wide 2021\n * @author Herb Miller @bobbingwide\n */\n\n\nimport { useSelect } from '@wordpress/data';\nimport { SelectControl } from '@wordpress/components';\n\n/**\n * Returns the fields array for the selected post type.\n *\n * @param fields\n * @param postType\n * @returns {*}\n */\nfunction getPostTypeFields( fields, postType ) {\n\tconsole.log( fields );\n\tif ( 0 === fields.length ) {\n\t\treturn [];\n\t}\n\tvar postTypeFields = fields.filter( function( field) {\n\t\treturn field.postType == postType;\n\t});\n\tconsole.log( postTypeFields );\n\tif ( postTypeFields.length ) {\n\t\tvar postTypeFieldFirst = postTypeFields[0];\n\t\treturn postTypeFieldFirst.fields;\n\t}\n\treturn [];\n}\n\nfunction fieldOptions( fields, postType) {\n\t//if ( fields ) {\n\tvar postTypeFields = getPostTypeFields( fields, postType);\n\tconsole.log( postTypeFields );\n\tvar options = postTypeFields ? postTypeFields.map((field) => fieldOption(field)) : [];\n\t//}\n\treturn options;\n}\n\n/**\n * Map the field to a select list option\n *\n * @param field\n * @returns {{label: *, value: *}}\n */\nfunction fieldOption( field ) {\n\treturn( { value: field.name, label: field['#title'] });\n}\n\nfunction defaultField( options ) {\n\tif ( options.length ) {\n\t\treturn( options[0].value);\n\t}\n\treturn null;\n\n}\n\n\n\n\n\nexport const FieldSelect = ( props ) => {\n\tconst content = useSelect( ( select ) => {\n\t\treturn select( 'oiksb/fields' ).getFields( props.type );\n\t}, [ props.type ] );\n\tconsole.log( \"FieldSelect\");\n\tconsole.log( content );\n\tconsole.log( props );\n\tconsole.log( \"FS after\");\n\tvar options = fieldOptions( content,props.postType );\n\tif ( props.value === undefined ) {\n\t\tprops.onChange( defaultField( options ) );\n\t}\n\treturn(\n\t<SelectControl label=\"Field\" value={props.value}\n\t\t\t\t   options={options}\n\t\t\t\t   onChange={ props.onChange}\n\t/>\n\t);\n}\n\n","/**\n * Registers a new block provided a unique name and an object defining its behavior.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/#registering-a-block\n */\nimport { registerBlockType } from '@wordpress/blocks';\n\n/**\n * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.\n * All files containing `style` keyword are bundled together. The code used\n * gets applied both to the front of your site and to the editor.\n *\n * @see https://www.npmjs.com/package/@wordpress/scripts#using-css\n */\nimport './style.scss';\n\n/**\n * Internal dependencies\n */\n\nimport Edit from './edit';\nimport save from './save';\n\n/**\n * Every block starts by registering a new block type definition.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/#registering-a-block\n */\nregisterBlockType( 'oiksb/sb-field-block', {\n\n\t/**\n\t * @see ./edit.js\n\t */\n\tedit: Edit,\n\n\t/**\n\t * @see ./save.js\n\t */\n\tsave,\n} );\n","/**\n * Implements the PostType selection list\n *\n * Similar to field.js with code copied from oik-content/post_type.js ( oik-blocks )\n *\n * @copyright (C) Copyright Bobbing Wide 2021, 2024\n * @author Herb Miller @bobbingwide\n */\n\n\nimport { useSelect } from '@wordpress/data';\nimport { SelectControl } from '@wordpress/components';\n\n/**\n\t * Map the postType to a select list option\n\t *\n\t * @param postType\n\t * @returns {{label: *, value: *}}\n\t */\nfunction postTypeOption( postType ) {\n\t\treturn( { value: postType.postType, label: postType.label });\n}\n\n\nexport const PostTypeSelect = ( props ) => {\n\t/*\n\tconst postTypes = useSelect((select) => {\n\t\treturn select('core').getPostTypes({per_page: -1});\n\t}, []);\n\n\t */\n\n\tconst postTypes = useSelect( ( select ) => {\n\t\treturn select( 'oiksb/fields' ).getFields();\n\t}, []);\n\n\tconsole.log(\"PostTypeSelect\");\n\tconsole.log(postTypes);\n\tconsole.log( props);\n\tconsole.log(\"PT after\");\n\tif (postTypes && postTypes.length) {\n\t\tvar options = postTypes.map((postType) => postTypeOption(postType));\n\t} else {\n\t\tvar options = [{ value: '', label: 'Wait for it...' }];\n\t}\n\treturn (\n\t\t<SelectControl label=\"Post Type\" value={props.value}\n\t\t\t\t\t   options={options}\n\t\t\t\t\t   onChange={props.onChange}\n\t\t/>\n\t);\n}\n","/**\r\n * Retrieves the translation of text.\r\n *\r\n * @see https://developer.wordpress.org/block-editor/packages/packages-i18n/\r\n */\r\nimport { __ } from '@wordpress/i18n';\r\n\r\n/**\r\n * React hook that is used to mark the block wrapper element.\r\n * It provides all the necessary props like the class name.\r\n *\r\n * @see https://developer.wordpress.org/block-editor/packages/packages-block-editor/#useBlockProps\r\n */\r\nimport { useBlockProps } from '@wordpress/block-editor';\r\n\r\n/**\r\n * The save function defines the way in which the different attributes should\r\n * be combined into the final markup, which is then serialized by the block\r\n * editor into `post_content`.\r\n *\r\n * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#save\r\n *\r\n * @return {WPElement} Element to render.\r\n */\r\nexport default function save() {\r\n\t// No information saved to the block\r\n\t// Data is saved to post meta via the hook\r\n\treturn null;\r\n\r\n}\r\n","/*\nCode copied from https://wholesomecode.ltd/blog/wordpress-gutenberg-rest-api/\n- option changed to fields\n- setOption changed to setFields\n- getOption changed to getFields\n- path in getFields changed to '/oiksb/v1/fields'\n- console.logs added while attempting to follow the processing.\n\nIt didn't work when the I mixed Fields with fields\n */\n\nimport apiFetch from '@wordpress/api-fetch';\nimport { registerStore } from '@wordpress/data';\n\n/**\n * Selectors\n */\nconst selectors = {\n\tgetFields( state, postType ) {\n\t\tconst { fields } = state;\n\t\treturn fields;\n\t},\n};\n\n/**\n * Resolvers\n */\nconst resolvers = {\n\t*getFields( postType ) {\n\t\tconst fields = yield actions.getFields(\n\t\t\t'/oiksb/v1/fields',\n\t\t);\n\t\treturn actions.setFields( fields );\n\t},\n};\n\n/**\n * Actions\n */\nconst actions = {\n\tsetFields( fields ) {\n\t\treturn {\n\t\t\ttype: 'SET_FIELDS',\n\t\t\tfields,\n\t\t};\n\t},\n\tgetFields( path ) {\n\t\treturn {\n\t\t\ttype: 'GET_FIELDS',\n\t\t\tpath,\n\t\t};\n\t},\n};\n\n/**\n * Controls\n */\nconst controls = {\n\tGET_FIELDS( action ) {\n\t\treturn apiFetch( { path: action.path } );\n\t},\n};\n\n/**\n * Reducer\n *\n * @param {object} state\n * @param {string} action\n */\nfunction reducer( state = { fields: [] }, action ) {\n\tconsole.log( 'reducer');\n\tconsole.log( state);\n\tconsole.log( action);\n\tswitch ( action.type ) {\n\t\tcase 'SET_FIELDS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfields: action.fields,\n\t\t\t};\n\t}\n\treturn state;\n};\n\n/**\n * Register Store\n */\nconst store = registerStore(\n\t'oiksb/fields',\n\t{\n\t\tactions,\n\t\tcontrols,\n\t\treducer,\n\t\tresolvers,\n\t\tselectors,\n\t}\n);\n\nexport default store;\n","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"ReactJSXRuntime\"];","module.exports = window[\"wp\"][\"apiFetch\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"coreData\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"serverSideRender\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"sb-field-block\": 0,\n\t\"./style-sb-field-block\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunksb_field_block\"] = self[\"webpackChunksb_field_block\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"./style-sb-field-block\"], () => (__webpack_require__(\"../../../../wordpress/wp-content/plugins/sb-field-block/src/sb-field-block/index.js\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["useSelect","ServerSideRender","jsx","_jsx","jsxs","_jsxs","getFieldDescription","postType","fieldName","field","getField","description","getFieldType","fieldType","undefined","getPostFields","type","content","select","getFields","console","log","postFields","find","fields","name","needsRendering","fieldTypeNeedsRendering","fieldNeedsRendering","hasOwnProperty","DisplayMetaControl","props","fieldValue","separator","urlQueryArgs","context","postId","block","attributes","showLabel","className","children","__","useBlockProps","InspectorControls","TextControl","PanelBody","PanelRow","ToggleControl","useEntityProp","Fragment","FieldSelect","PostTypeSelect","Store","Edit","setAttributes","blockProps","onChangePostType","meta","setMeta","onChangeFieldName","value","metaFieldValue","updateMetaValue","newValue","onChangeShowLabel","onChange","label","checked","SelectControl","getPostTypeFields","length","postTypeFields","filter","postTypeFieldFirst","fieldOptions","options","map","fieldOption","defaultField","registerBlockType","save","edit","postTypeOption","postTypes","apiFetch","registerStore","selectors","state","resolvers","actions","setFields","path","controls","GET_FIELDS","action","reducer","store"],"sourceRoot":""}